image: "registry.gitlab.com/n8rzz/ruby-rails-node-chrome-runner:latest"

services:
  - postgres:11-alpine

stages:
  - build
  - lint
  - test
  # - container
  - deploy

variables:
  APP_NAME_DEVELOP: xray-shopper-develop
  APP_NAME_STAGE: xray-shopper-stage
  APP_NAME_MASTER: xray-shopper
  POSTGRES_DB: postgres
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: threeve
  CONTAINER_IMAGE: xray-shopper

before_script:
  - date
  - echo $PATH

.build-base: &build-base
  before_script:
  - which ruby
  - bundle install --jobs $(nproc) "${FLAGS[@]}"
  - ruby -v
  - bin/rails -v
  - node -v
  - yarn --version
  - cp config/database.gitlab.yml config/database.yml
  - RAILS_ENV=test bundle exec rails db:create db:schema:load || true
  - yarn install

build:
  <<: *build-base
  stage: build
  script:
    - rails assets:precompile

eslint:
  stage: lint
  script:
    - yarn install
    - yarn lint

styelint:
  stage: lint
  script:
    - yarn install
    - yarn lint:style

rubocop:
  <<: *build-base
  stage: lint
  script:
    - bundle exec rubocop --config .rubocop.yml

jest:
  stage: test
  script:
    - yarn install
    - yarn test:coverage
  artifacts:
    expire_in: 1 day
    paths:
      - coverage/

rspec:unit:
  <<: *build-base
  stage: test
  allow_failure: true
  script:
    - RAILS_ENV=test bundle exec rspec --exclude-pattern "spec/features/**/*_spec.rb"

rspec:feature:
  <<: *build-base
  allow_failure: true
  stage: test
  script:
    - RAILS_ENV=test bundle exec rspec spec/features/**/*_spec.rb --failure-exit-code 0
    - RAILS_ENV=test bundle exec rspec spec/features/**/*_spec.rb --only-failures

deploy:develop:
  stage: deploy
  environment:
    name: develop
  allow_failure: true
  except:
    - tags
    - stage
    - master
  script:
    - dpl --provider=heroku --app=$APP_NAME_DEVELOP --api_key=$HEROKU_API_KEY

deploy:stage:
  allow_failure: true
  stage: deploy
  environment:
    name: stage
  only:
    - stage
  script:
    - dpl --provider=heroku --app=$APP_NAME_STAGE --api_key=$HEROKU_API_KEY

deploy:master:
  allow_failure: true
  stage: deploy
  environment:
    name: production
  only:
    - master
  script:
    - dpl --provider=heroku --app=$APP_NAME_MASTER --api_key=$HEROKU_API_KEY

deploy:release:
  allow_failure: true
  stage: deploy
  environment:
    name: production
  only:
    - tags
  script:
    - dpl --provider=heroku --app=$APP_NAME_MASTER --api_key=$HEROKU_API_KEY
